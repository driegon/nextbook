/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package book.next;

import basededatos.conexion;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Deisy
 */
public class Buscador extends javax.swing.JFrame {

    private int id_usuario = 0;
    private String[] listaLibros = new String[5];
    private conexion bdd = new conexion();
    
    /**
     * Inicializa la ventana
     * @param id 
     */
    public Buscador(int id) {
        initComponents();
        id_usuario = id;
    }   
    
    public Buscador() {
        initComponents();
        id_usuario = 0;
    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tb_busqueda = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btn_buscar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cb_titulo = new javax.swing.JCheckBox();
        cb_autor = new javax.swing.JCheckBox();
        cb_edicion = new javax.swing.JCheckBox();
        cb_resumen = new javax.swing.JCheckBox();
        cb_categoria = new javax.swing.JCheckBox();
        cb_palabrasclave = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_resultados = new javax.swing.JTable();
        btn_agregar1 = new javax.swing.JButton();
        btn_agregar2 = new javax.swing.JButton();
        btn_agregar3 = new javax.swing.JButton();
        btn_agregar4 = new javax.swing.JButton();
        btn_agregar5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Búsqueda");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Búsqueda:");

        btn_buscar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cb_titulo.setText("Titulo");
        cb_titulo.setActionCommand("Título");

        cb_autor.setText("Autor");

        cb_edicion.setText("Edición");

        cb_resumen.setText("Resumen");

        cb_categoria.setText("Categoría");

        cb_palabrasclave.setText("Palabras clave");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_autor)
                    .addComponent(cb_titulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_edicion)
                    .addComponent(cb_resumen))
                .addGap(136, 136, 136)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_categoria)
                    .addComponent(cb_palabrasclave))
                .addGap(9, 9, 9))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cb_categoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cb_palabrasclave))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_titulo)
                            .addComponent(cb_edicion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_autor)
                            .addComponent(cb_resumen))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabla_resultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", null, null, null},
                {"2", null, null, null},
                {"3", null, null, null},
                {"4", null, null, null},
                {"5", null, null, null}
            },
            new String [] {
                "No.", "Libro", "Autor", "Punteo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla_resultados);
        if (tabla_resultados.getColumnModel().getColumnCount() > 0) {
            tabla_resultados.getColumnModel().getColumn(0).setResizable(false);
            tabla_resultados.getColumnModel().getColumn(0).setPreferredWidth(1);
            tabla_resultados.getColumnModel().getColumn(3).setResizable(false);
            tabla_resultados.getColumnModel().getColumn(3).setPreferredWidth(1);
        }

        btn_agregar1.setText("Agregar 1");
        btn_agregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar1ActionPerformed(evt);
            }
        });

        btn_agregar2.setText("Agregar 2");

        btn_agregar3.setText("Agregar 3");

        btn_agregar4.setText("Agregar 4");

        btn_agregar5.setText("Agregar 5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tb_busqueda))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_agregar1)
                                    .addComponent(btn_agregar2)
                                    .addComponent(btn_agregar3)
                                    .addComponent(btn_agregar4)
                                    .addComponent(btn_agregar5))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btn_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tb_busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btn_buscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_agregar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_agregar2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_agregar3)
                        .addGap(3, 3, 3)
                        .addComponent(btn_agregar4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_agregar5))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
            limpiarTablaResultados();
            
            if(hayCriterioSeleccionado() == true){
            conexion bdd = new conexion();
            ResultSet resultado = null;

            resultado = bdd.consulta(generarConsulta(tb_busqueda.getText()));
            int contador = 0;

            try{
                while (resultado.next()){
                    tabla_resultados.setValueAt(contador + 1, contador, 0);
                    tabla_resultados.setValueAt(resultado.getString("titulo"), contador, 1);
                    tabla_resultados.setValueAt(resultado.getString("nombre_autor"), contador, 2);
                    tabla_resultados.setValueAt(resultado.getString("punteo"), contador, 3);
                    listaLibros[contador] = resultado.getString("id");
                    contador++;
                }
                resultado.close();
            }catch(SQLException ex)
            {
                System.out.println("SQLException: "+ ex.getMessage());        
            }
            
            if(contador == 0)
            {
              JOptionPane.showMessageDialog(null, "No hay resultados para la búsqueda", "¡Atención!", JOptionPane.INFORMATION_MESSAGE);
            }
            else
            {
                habilitarBotones(contador);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Debes seleccionar al menos un criterio de búsqueda", "¡Atención!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    private void agregarEstadistica(int numeroLibro)
    {
        /* Agregar a estadísticas */
        String retorno = "";
        String query = "INSERT INTO recomendacion (id, id_libro, fec_transac, id_usuario) "
                + "VALUES (NULL, "+listaLibros[numeroLibro]+", CURRENT_TIMESTAMP, "+id_usuario+")";
        retorno = bdd.ejecutarQuery(query);      

        if (retorno.compareTo("") != 0)
        {
            JOptionPane.showMessageDialog(null, "ERROR: "+retorno, "¡Atención!", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "¡Libro agregado a Carretilla!", "¡Atención!", JOptionPane.INFORMATION_MESSAGE);
        }
        
        bdd.cerrarConexion();
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        limpiarTablaResultados();
    }//GEN-LAST:event_formWindowOpened

    private void btn_agregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar1ActionPerformed
        if(agregarACarretilla() == true)
        {
            JOptionPane.showMessageDialog(null, "Se agregó correctamente el libro a tu carretilla", "¡Atención!", JOptionPane.INFORMATION_MESSAGE);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Ocurrió un error al agregar a tu carretilla", "¡Atención!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_agregar1ActionPerformed

    private Boolean agregarACarretilla()
    {
        return true;
    }
    
    /**
     * Se habilitan botones para agregar a carretilla y se agregan las estadísticas de la búsqueda
     * @param habilitables 
     */
    private void habilitarBotones(int habilitables)
    {
        if(habilitables > 4)
        {
            btn_agregar5.setEnabled(true);
            agregarEstadistica(4);
        }
        if(habilitables > 3)
        {
            btn_agregar4.setEnabled(true);
            agregarEstadistica(3);
        }
        if(habilitables > 2)
        {
            btn_agregar3.setEnabled(true);
            agregarEstadistica(2);
        }
        if(habilitables > 1)
        {
            btn_agregar2.setEnabled(true);
            agregarEstadistica(1);
        }
        if(habilitables > 0)
        {
            btn_agregar1.setEnabled(true);
            agregarEstadistica(0);
        }
    }
    
    private String generarConsulta(String ingresado)
    {
        String query = "SELECT DISTINCT\n" +
                        "  l.id,\n" +
                        "  l.titulo,\n" +
                        "  CONCAT(a.Nombre,\n" +
                        "  ' ',\n" +
                        "  a.Apellido) AS nombre_autor,\n" +
                        "  l.punteo\n" +
                        "FROM libro AS l\n" +
                        "INNER JOIN palabraclave_libro AS pl ON l.id = pl.id_libro\n" +
                        "INNER JOIN palabraclave AS p ON pl.id_palabraclave = p.id\n" +
                        "INNER JOIN categoria_libro AS cl ON l.id = cl.id_libro\n" +
                        "INNER JOIN categoria AS c ON c.id = cl.id_categoria\n" +
                        "INNER JOIN autor AS a ON l.id_autor = a.id\n" + 
                        "WHERE ";
        
        List<String> opciones = new ArrayList<String>();
        
        if(cb_titulo.isSelected() == true)
        {
            opciones.add(" l.titulo LIKE '%"+ ingresado +"%' ");
        }
        
        if(cb_edicion.isSelected() == true)
        {
            opciones.add(" l.edicion LIKE '%"+ ingresado +"%' ");
        }
        
        if(cb_categoria.isSelected() == true)
        {
            opciones.add(" c.nombre LIKE '%"+ ingresado +"%' ");
        }
        
        if(cb_autor.isSelected() == true)
        {
            opciones.add(" a.nombre LIKE '%"+ ingresado +"%' OR " + "a.apellido LIKE '%"+ ingresado +"%' ");
        }
        
        if(cb_resumen.isSelected() == true)
        {
            opciones.add(" l.resumen LIKE '%"+ ingresado +"%' ");
        }
        
        if(cb_palabrasclave.isSelected() == true)
        {
            opciones.add(" p.nombre LIKE '%"+ ingresado +"%' ");
        }
        
        for (int i = 0; i < opciones.size(); i++) {
            query += opciones.get(i);
            
            if (i != opciones.size() - 1)
            {
                query += " OR ";
            }
        }
        
        query += " LIMIT 5";
        
        return query;       
    }
    
    /** 
     * Verifica si hay al menos un criterio de búsqueda seleccionado
     * @return Indica verdadero si hay, falso si no hay
     */
    private Boolean hayCriterioSeleccionado()
    {
        Boolean resultado = false;
        
        if(cb_titulo.isSelected() == true || cb_edicion.isSelected() == true ||
            cb_categoria.isSelected() == true || cb_autor.isSelected() == true ||
            cb_resumen.isSelected() == true || cb_palabrasclave.isSelected() == true)
        {
            resultado = true;
        }
        
        return resultado;
    }
    
    /**
     * Limpia la tabla de resultados
     */
    private void limpiarTablaResultados(){
        for (int i  = 0; i < 5; i++) {
            for (int j = 0; j < 4; j++) {
                tabla_resultados.setValueAt("", i, j);
            }
            listaLibros[i] = "";
        }
        
        btn_agregar1.setEnabled(false);
        btn_agregar2.setEnabled(false);
        btn_agregar3.setEnabled(false);
        btn_agregar4.setEnabled(false);
        btn_agregar5.setEnabled(false);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buscador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buscador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buscador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buscador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buscador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregar1;
    private javax.swing.JButton btn_agregar2;
    private javax.swing.JButton btn_agregar3;
    private javax.swing.JButton btn_agregar4;
    private javax.swing.JButton btn_agregar5;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JCheckBox cb_autor;
    private javax.swing.JCheckBox cb_categoria;
    private javax.swing.JCheckBox cb_edicion;
    private javax.swing.JCheckBox cb_palabrasclave;
    private javax.swing.JCheckBox cb_resumen;
    private javax.swing.JCheckBox cb_titulo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla_resultados;
    private javax.swing.JTextField tb_busqueda;
    // End of variables declaration//GEN-END:variables
}
